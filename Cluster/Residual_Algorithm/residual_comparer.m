%clear all
close all
format shortg;

%patient to read

T = readtable('PatientInfo07132021.csv','Headerlines',2);
INDMAP = [6 8 14 15 20];

    
for pt= 6:10 %[37 48 59 60 65 66 67]


    pt
    pt_id = T{pt,1}{1}
    
    %How much rest are we cutting?
    restCut = 0;
    
    %Preallocate save data structure
    saveDat.optpars = zeros(8,5);
    saveDat.pars = zeros(8,5);
    saveDat.INDMAP = INDMAP;
    saveDat.xhist = cell(8,30);
    saveDat.restTime = 30;
    saveDat.Init = zeros(8,4);
    saveDat.error = zeros(8,1);
    saveDat.flag = 0;
    
    %check if there's a file
    %if isfile(strcat('../MatFiles/',pt_id,'_val1_WS.mat'))
     if isfile(strcat('MatFiles/',pt_id,'_val2_WS.mat'))
       
       error  = zeros(5,2);
       
       %pt_WS = strcat(pt_id,'_val1_WS.mat')
        pt_WS = strcat(pt_id,'_val2_WS.mat')
       
       %8 random starts
       for k = 1:8
           %On the first one, we want to determine the right amount of rest
           
            if k == 1
                for i = 0:3 %reducing rest before
                    %% Run forward eval and optimization
                    
                    %call forward evaluation with 30-5*i second rest periods
                    Func_DriverBasic(pt_WS,[30 - 5*i 30],INDMAP);

                    %nomHRfile =strcat('nomHR_',num2str(30-5*i),'.mat');
                    nomHRfile =strcat('nomHR2_',num2str(30-5*i),'.mat');

                    %Call optimization with file generated by forward evaluation
                    HR_LM = Func_DriverBasic_LM(nomHRfile,INDMAP,30-5*i);

                    %calculate residual error
                    %load(strcat('../Valsalva/nomHR_residuals/nomHR_',num2str(30-5*i),'.mat'))
                    load(strcat('/Valsalva/nomHR_residuals/nomHR2_',num2str(30-5*i),'.mat'))
                    start = min(find(Tdata >= val_start));
                    slut = min(find(Tdata >= val_end));
                    scaler = sqrt(length(Hdata(start:slut)));
                    error(i+1,1) = norm((Hdata(start:slut)-HR_LM(start:slut))./Hdata(start:slut)/scaler);
                    error(i+1,2) = (max(Hdata(start:slut)) - max(HR_LM(start:slut)))/max(Hdata(start:slut));

                    %% Save necessary stats
                    
                    %if the rest time was good enough, save stuff and break
                    %out of loop
                    if error(i+1,1) < .8/scaler || error(i+1,2) < 5/max(Hdata(start:slut))
                        restCut = i;
                        saveDat.restTime = 30 - restCut * 5;
                        saveDat.error(k) = error(i+1,1);
                        %load(strcat('../Valsalva/nomHR_residuals/nomHR_',num2str(30-5*i),'.mat'))
                        load(strcat('/Valsalva/nomHR_residuals/nomHR2_',num2str(30-5*i),'.mat'))
                        saveDat.pars(k,:) = pars(INDMAP');
                        saveDat.Init(k,:) = Init;
                        %load(strcat('../Valsalva/optHR_residuals/optHR_',num2str(30-5*i),'.mat'))
                        load(strcat('/Valsalva/optHR_residuals/optHR2_',num2str(30-5*i),'.mat'))
                        saveDat.optpars(k,:) = optpars(INDMAP);
                        saveDat.xhist(k,1:length(xhist)) = xhist;
                        break
                        
                    elseif i == 3
                        %Rest cut is the best residual error if none are
                        %satisfactory
                        saveDat.flag = 1;
                        restCut = find(error(:,1) == min(error(:,1)))-1;
                        saveDat.restTime = 30 - restCut * 5;
                        saveDat.error(k) = error(i+1,1);
                        %load(strcat('../Valsalva/nomHR_residuals/nomHR_',num2str(30-5*restCut),'.mat'))
                        load(strcat('/Valsalva/nomHR_residuals/nomHR2_',num2str(30-5*restCut),'.mat'))
                        saveDat.pars(k,:) = pars(INDMAP');
                        saveDat.Init(k,:) = Init;
                        %load(strcat('../Valsalva/optHR_residuals/optHR_',num2str(30-5*restCut),'.mat'))
                        load(strcat('/Valsalva/optHR_residuals/optHR_',num2str(30-5*restCut),'.mat'))
                        saveDat.optpars(k,:) = optpars(INDMAP);
                        saveDat.xhist(k,1:length(xhist)) = xhist;
                    end
                    
                end
                
            else %for the rest of the random starts, we don't need to vary rest time
                %% run forward eval and optimization
                Func_DriverBasic(pt_WS,[30 - 5*restCut 30],INDMAP);

                nomHRfile =strcat('nomHR_',num2str(30-5*restCut),'.mat');
                nomHRfile =strcat('nomHR2_',num2str(30-5*restCut),'.mat');
                    

                %Call optimization with file generated by forward evaluation
                HR_LM = Func_DriverBasic_LM(nomHRfile,INDMAP,30-5*restCut);
                
           
                %% save necessary stats
                %load(strcat('../Valsalva/nomHR_residuals/nomHR_',num2str(30-5*restCut),'.mat'))
                load(strcat('/Valsalva/nomHR_residuals/nomHR2_',num2str(30-5*restCut),'.mat'))
                start = min(find(Tdata >= val_start));
                slut = min(find(Tdata >= val_end));
                scaler = sqrt(length(Hdata(start:slut)));
                saveDat.error(k) =  norm((Hdata(start:slut)-HR_LM(start:slut))./Hdata(start:slut)/scaler);
                saveDat.pars(k,:) = pars(INDMAP');
                saveDat.Init(k,:) = Init;
                %load(strcat('../Valsalva/optHR_residuals/optHR_',num2str(30-5*restCut),'.mat'))
                load(strcat('/Valsalva/optHR_residuals/optHR_',num2str(30-5*restCut),'.mat'))
                saveDat.optpars(k,:) = optpars(INDMAP);
                saveDat.xhist(k,1:length(xhist)) = xhist;
                
            end

            %% Save
            %save(strcat('Optimized/',pt_id,'_optimized.mat'),'saveDat');
            save(strcat('Optimized/',pt_id,'_optimized.mat'),'saveDat');
       end
    end
end




