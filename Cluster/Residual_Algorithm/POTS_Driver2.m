%function POTS_Driver2(index)
    clear all
    global echoon
    global senson
    echoon = 0;
    senson = 1;
    format shortg;

    %Table with patient records, patient ids are the first column
    T = readtable('PatientInfo07132021.csv','Headerlines',2);
    
    %Parameters to estimate (taupb 
    INDMAP = [6 8 14 15 20];

    %Loop over patients 
    for pt = 41
        pt_id = T{pt,1}{1};
        %How much rest are we cutting?
        restCut = 0;
        %Preallocate save data structure
        saveDat.optpars = zeros(8,5);
        saveDat.pars = zeros(8,5);
        saveDat.INDMAP = INDMAP;
        saveDat.xhist = cell(8,30);
        saveDat.restTime = 30;
        saveDat.Init = zeros(8,4);
        saveDat.error = zeros(8,1);
        saveDat.flag = 0;

        % if there's a file, execute optimization
        if isfile(strcat('MatFiles/',pt_id,'_val1_WS.mat'))
           %preallocate error matrix
           error = zeros(5,2);
           %Construct file to read
           pt_WS = strcat(pt_id,'_val1_WS.mat')
           data = load_data(pt_WS);
           %8 random samples of nominal parameter values
           for k = 1:8
               %On the first one, we want to determine the right amount of rest
                if k == 1
                    for i = 0:3 %reducing rest before
                        %% run forward eval and optimization
                        
                        
                        newdata = TimeCut(data,[30-5i,30]);
                        
                        %Call optimization with file generated by forward evaluation

                        [pars optpars Init xhist error2 HR_LM] = Func_DriverBasic_LM_p(newdata,INDMAP,30-5*i);
                        error(i+1,:) = error2;
                        hold on
                        plot(newdata.Tdata,HR_LM)                       
                        plot(newdata.Tdata,newdata.Hdata)
                        pause
                        %% Save necessary stats
    
                        %if the rest time was good enough, save stuff and break
                        %out of loop
                        start = min(find(newdata.Tdata >= newdata.val_start));
                        slut = min(find(newdata.Tdata >= newdata.val_end));
                        scaler = sqrt(length(newdata.Hdata(start:slut)));

                        
                        if error(i+1,1) < .8/scaler || error(i+1,2) < 5/max(newdata.Hdata(start:slut))
                            restCut = i;
                            data = newdata;
                            saveDat.restTime = 30 - restCut * 5;
                            saveDat.error(k) = error(i+1,1);
                            saveDat.pars(k,:) = pars(INDMAP');
                            saveDat.Init(k,:) = Init;
                            saveDat.optpars(k,:) = optpars(INDMAP);
                            saveDat.xhist(k,1:length(xhist)) = xhist;
                            break

                        elseif i == 3
                            %Rest cut is the best residual error if none are
                            %satisfactory
                            restCut = find(error(:,1) == min(error(:,1)))-1;
                            data = TimeCut(data,[30 - 5* restCut, 3]);
                            saveDat.flag = 1;
                            saveDat.restTime = 30 - restCut * 5;
                            saveDat.error(k) = error(i+1,1);
                            saveDat.pars(k,:) = pars(INDMAP');
                            saveDat.Init(k,:) = Init;
                            saveDat.optpars(k,:) = optpars(INDMAP);
                            saveDat.xhist(k,1:length(xhist)) = xhist;
                        end
                        
                    end

                else %for the rest of the random starts, we don't need to vary rest time
                    
                    [pars optpars Init xhist error2]  = Func_DriverBasic_LM(data,INDMAP,30-5*restCut);
                    %% save necessary stats
                    
                    saveDat.error(k) = error2(1);
                    saveDat.pars(k,:) = pars(INDMAP');
                    saveDat.Init(k,:) = Init;
                    saveDat.optpars(k,:) = optpars(INDMAP);
                    saveDat.xhist(k,1:length(xhist)) = xhist;

                end

                %% Save
                save(strcat('Optimized/',pt_id,'_optimized.mat'),'saveDat');
           end
        end
    end

%end



